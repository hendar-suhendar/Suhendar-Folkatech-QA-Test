{
	"info": {
		"_postman_id": "0a4e18b4-f538-4462-b949-8f167bfd59d7",
		"name": "API Performance Automate Folkatech by Suhendar Copy",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14226689",
		"_collection_link": "https://galactic-comet-859386.postman.co/workspace/Test~c49596fd-38ae-49b7-96c5-35ff7f7dcb2b/collection/14226689-0a4e18b4-f538-4462-b949-8f167bfd59d7?action=share&source=collection_link&creator=14226689"
	},
	"item": [
		{
			"name": "TC1_Positive_User Successfully for Registeration",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Function to generate a random name\r",
							"function getRandomName() {\r",
							"    const firstNames = [\"Rahmatullah\", \"Ali\", \"Siti\", \"Budi\", \"Dewi\", \"Andi\", \"Fatima\", \"Joko\"];\r",
							"    const lastNames = [\"Setiawan\", \"Sukma\", \"Rahman\", \"Pratiwi\", \"Wati\", \"Lestari\", \"Kusuma\", \"Halim\"];\r",
							"    \r",
							"    const firstName = firstNames[Math.floor(Math.random() * firstNames.length)];\r",
							"    const lastName = lastNames[Math.floor(Math.random() * lastNames.length)];\r",
							"    \r",
							"    return `${firstName} ${lastName}`;\r",
							"}\r",
							"\r",
							"// Function to generate a random email\r",
							"function getRandomEmail() {\r",
							"    const domains = [\"gmail.com\", \"yahoo.com\", \"outlook.com\", \"hotmail.com\"];\r",
							"    const randomString = Math.random().toString(36).substring(2, 10);\r",
							"    const email = `${randomString}@${domains[Math.floor(Math.random() * domains.length)]}`;\r",
							"    \r",
							"    return email;\r",
							"}\r",
							"\r",
							"// Function to generate a random phone number\r",
							"function getRandomPhoneNumber() {\r",
							"    const phoneNumber = \"0821\" + Math.floor(1000000000 + Math.random() * 9000000000);\r",
							"    return phoneNumber;\r",
							"}\r",
							"\r",
							"// Generate random data\r",
							"const randomName = getRandomName();\r",
							"const randomEmail = getRandomEmail();\r",
							"const randomPhoneNumber = getRandomPhoneNumber();\r",
							"\r",
							"// Set the random data as Postman environment variables\r",
							"pm.environment.set(\"randomName\", randomName);\r",
							"pm.environment.set(\"randomEmail\", randomEmail);\r",
							"pm.environment.set(\"randomPhoneNumber\", randomPhoneNumber);\r",
							"\r",
							"// Logging the values to the console for debugging purposes\r",
							"console.log(`Generated Name: ${randomName}`);\r",
							"console.log(`Generated Email: ${randomEmail}`);\r",
							"console.log(`Generated Phone Number: ${randomPhoneNumber}`);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Import the 'moment' library\r",
							"var moment = require('moment');\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response body has the correct structure\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"code\");\r",
							"    pm.expect(jsonData).to.have.property(\"message\");\r",
							"    pm.expect(jsonData).to.have.property(\"success\");\r",
							"    pm.expect(jsonData).to.have.property(\"data\");\r",
							"    pm.expect(jsonData.code).to.be.a('number');\r",
							"    pm.expect(jsonData.message).to.be.a('string');\r",
							"    pm.expect(jsonData.success).to.be.a('boolean');\r",
							"    pm.expect(jsonData.data).to.be.an('object');\r",
							"});\r",
							"\r",
							"pm.test(\"Response body data has correct values\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"  \r",
							"    pm.expect(jsonData.message).to.eql(\"user registered successfully\"); // Check if message matches\r",
							"    pm.expect(jsonData.success).to.eql(true);\r",
							"    var id = jsonData.data.id;\r",
							"    pm.expect(id).to.not.be.null;  // Ensure it's not null\r",
							"    pm.expect(id).to.be.a('number');  // Ensure it's a number\r",
							"    pm.expect(jsonData.data).to.have.property(\"name\", pm.environment.get(\"randomName\"));\r",
							"    pm.expect(jsonData.data).to.have.property(\"phone_number\", pm.environment.get(\"randomPhoneNumber\"));\r",
							"    pm.expect(jsonData.data).to.have.property(\"email\", pm.environment.get(\"randomEmail\"));\r",
							"    pm.expect(jsonData.data).to.have.property(\"role_id\", 2);\r",
							"\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "name",
							"value": "{{randomName}}",
							"type": "text"
						},
						{
							"key": "email",
							"value": "{{randomEmail}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "Qwerty123!",
							"type": "text"
						},
						{
							"key": "password_confirmation",
							"value": "Qwerty123!",
							"type": "text"
						},
						{
							"key": "phone",
							"value": "{{randomPhoneNumber}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://lapor.folkatech.com/api/register",
					"protocol": "https",
					"host": [
						"lapor",
						"folkatech",
						"com"
					],
					"path": [
						"api",
						"register"
					]
				}
			},
			"response": [
				{
					"name": "Register",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "Tatang Basher",
									"type": "text"
								},
								{
									"key": "email",
									"value": "tatang@gmail.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "secret",
									"type": "text"
								},
								{
									"key": "password_confirmation",
									"value": "secret",
									"type": "text"
								},
								{
									"key": "role_id",
									"value": "1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api}}/api/register",
							"host": [
								"{{api}}"
							],
							"path": [
								"api",
								"register"
							]
						}
					},
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"code\": 201,\n    \"message\": \"user registered successfully\",\n    \"success\": true,\n    \"data\": {\n        \"name\": \"Tatang Basher\",\n        \"email\": \"tatang@gmail.com\",\n        \"role_id\": \"1\",\n        \"unit_id\": \"1\",\n        \"updated_at\": \"2023-07-10T04:11:53.000000Z\",\n        \"created_at\": \"2023-07-10T04:11:53.000000Z\",\n        \"id\": 3\n    }\n}"
				},
				{
					"name": "Failed - User Exists",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "Tatang Basher",
									"type": "text"
								},
								{
									"key": "email",
									"value": "tatang@gmail.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "secret",
									"type": "text"
								},
								{
									"key": "password_confirmation",
									"value": "secret",
									"type": "text"
								},
								{
									"key": "role_id",
									"value": "1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api}}/api/register",
							"host": [
								"{{api}}"
							],
							"path": [
								"api",
								"register"
							]
						}
					},
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"code\": 400,\n    \"message\": \"The email has already been taken.\",\n    \"success\": false,\n    \"data\": {}\n}"
				}
			]
		}
	]
}